// Q Number Of Zero-Filled Subarrays ?
//Approach - 1 (length count)
//T C : O(n) -> visite element only once 
//S C : O(1)
class Solution {
    public long zeroFilledSubarray(int[] nums) {

     int n = nums.length;

     long result = 0;

     int i =0;
     
      while(i < n){

            int l  = 0;
            
            if(nums[i] == 0){

                  //this loop for (0,0) contigues zero count 
                  while(i < n && nums[i] == 0){
                        i++;
                        l++;
                  }

            }else{

                   i++;
            }

           result += (l)*(l+1)/2;//note wehen we perform calculation to store value using += operator 
      }
       return result;


    }
}
-------------------------------------------------------------------------------------------
//Approach - 2 (Simple Observation)
//T C : O(n) -> visite element only once 
//S C : O(1)
class Solution {
    public long zeroFilledSubarray(int[] nums) {

        int n = nums.length;

        long result = 0;
       
        int count = 0;

        for(int i=0; i<n; i++){

              if(nums[i] == 0){

                   count++;
              }
              else{
                count = 0;
              }

            result = result+count;
        }
        return result;
    }
}