//GfG Majority Element _II
// Approach -> using HashMap
// T C : 0(n)
// S C : 0(n) -> for HashMap  
public class MajorityElement_II_UsingHashMap {

    static public List<Integer> findMajority(int[] nums) {

        int n = nums.length;
        Map<Integer,Integer> freq = new HashMap<>();
        List<Integer> result = new LinkedList<>();

        //step1: find frequency of each number
        for(int num : nums){
            freq.put(num,freq.getOrDefault(num,0)+1);
        }

        //step 2: Iterate over each key and value pair in the hashmap
        for(Map.Entry<Integer,Integer> Entry : freq.entrySet()){

             int element = Entry.getKey();
             int count = Entry.getValue();

             //Step 3 : add the elment to the result if its frequency
             if (count > n/3){
                 result.add(element);
             }
        }