//Q Contains Duplicate II
//Approach (Using Map)
// T C : 0(n)
// S C : 0(n)
class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        Map<Integer, Integer> map = new HashMap<>();
        
        for (int i = 0; i < nums.length; i++) {
            if (map.containsKey(nums[i]) && Math.abs(map.get(nums[i]) - i) <= k) { //check if present in map and abs(i-j) <= k
                return true;
            } else {
                map.put(nums[i], i); // Store the number and its index
            }
        }
        
        return false;
    }
}
